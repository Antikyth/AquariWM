initSidebarItems({"enum":[["ConnError","Error type that is returned by `Connection::has_error`."],["Error","The general error type for Rust-XCB."],["Event","Unified Event type from the X server."],["Extension","Refers to a X protocol extension."],["Lat1Error","Error that can produce Latin-1 string operations"],["ProtocolError","A protocol error issued from the X server"]],"fn":[["parse_display","Parses a display string in the form documented by X (7x)."]],"macro":[["atoms_struct","An helper macro that generate a struct of atoms."]],"mod":[["bigreq","The `BIG-REQUESTS` extension."],["ffi","Module for Foreign Function Interface bindings."],["x","The core X protocol definitions"],["xc_misc","The `XC-MISC` extension."]],"struct":[["AuthInfo","Container for authentication information to connect to the X server"],["Connection","`Connection` is the central object of XCB."],["DisplayInfo","Display info returned by [`parse_display`]"],["ExtensionData","Extension data as returned by each extensions `get_extension_data`."],["Lat1Str","A slice to a Latin-1 (aka. ISO 8859-1) string."],["Lat1StrF","Latin-1 (aka. ISO 8859-1) of fixed size"],["Lat1String","A struct owning a Latin-1 (aka. ISO 8859-1) string."],["UnknownEvent","an event was not recognized as part of the core protocol or any enabled extension"],["VoidCookie","The default cookie type returned by void-requests."],["VoidCookieChecked","The checked cookie type returned by void-requests."]],"trait":[["BaseError","A trait to designate base protocol errors."],["BaseEvent","Trait for base events (aka. non GE_GENERIC events)"],["Cookie","General trait for cookies returned by requests."],["CookieChecked","A marker trait for a cookie that allows synchronized error checking."],["CookieWithReplyChecked","A trait for checked cookies of requests that send a reply."],["CookieWithReplyUnchecked","A trait for unchecked cookies of requests that send a reply."],["GeEvent","A trait for GE_GENERIC events"],["Raw","Trait for types that own a C allocated pointer and are represented by the data pointed to."],["RawRequest","Trait implemented by all requests to send the serialized data over the wire."],["Reply","Trait for request replies"],["Request","Trait implemented by requests types."],["RequestWithReply","Trait for requests that return a reply."],["RequestWithoutReply","Marker trait for requests that do not return a reply."],["Xid","A X resource trait"],["XidNew","Trait for X resources that can be created directly from `Connection::generate_id`"]],"type":[["ConnResult","The result type associated with [ConnError]."],["ProtocolResult","The result type associated with [ProtocolError]."],["Result","The general result type for Rust-XCB."]]});